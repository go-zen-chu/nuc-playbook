# common setting https://kubernetes.io/ja/docs/setup/production-environment/tools/kubeadm/install-kubeadm/
- name: set swapoff
  command: swapoff -a
  become: True

# install libraries required for kubelet
- name: install ebtables
  pacman:
    name: ebtables
    state: present
  become: True

- name: install ethtool
  pacman:
    name: ethtool
    state: present
  become: True

- name: install socat
  pacman:
    name: socat
    state: present
  become: True

- name: install conntrack-tools
  pacman:
    name: conntrack-tools
    state: present
  become: True

# setup cri-o
- name: enable overlay module
  command: modprobe overlay
  become: True

- name: enable br_netfilter module
  command: modprobe br_netfilter
  become: True

- name: install cri-o
  pacman:
    name: cri-o 
    state: present

- name: check netfilter option configured as expected
  shell:
    cmd: sysctl --system
  register: sysctl_result
  failed_when: '"net.bridge.bridge-nf-call-iptables = 1" in sysctl_result.stdout'

- name: set storage driver to overlay
  lineinfile:
    dest: /etc/containers/storage.conf
    regexp: "^driver = \"\""
    line: "driver = \"overlay\""
  become: True

- name: run and enable cri-o service
  ansible.builtin.systemd:
    enabled: True
    state: started
    name: crio

- name: check netfilter option configured as expected
  command: crio-status config
  become: True

# download crictl
- name: create /usr/local/bin
  file:
    path: /usr/local/bin
    state: directory
    recurse: yes
  become: True

- name: download crictl
  shell:
    cmd: |
      CRICTL_VERSION="v1.16.0"
      curl -L "https://github.com/kubernetes-sigs/cri-tools/releases/download/${CRICTL_VERSION}/crictl-${CRICTL_VERSION}-linux-amd64.tar.gz" | tar -C /usr/local/bin -xz
  become: True

# setup cni
- name: create /opt/cni/bin
  file:
    path: /opt/cni/bin
    state: directory
    recurse: yes
  become: True

- name: download cni plugins
  shell:
    cmd: |
      CNI_VERSION="v0.8.2"
      curl -L "https://github.com/containernetworking/plugins/releases/download/${CNI_VERSION}/cni-plugins-linux-amd64-${CNI_VERSION}.tgz" | tar -C /opt/cni/bin -xz
  become: True

# download kubectl
- name: download kubectl
  shell:
    cmd: |
      KUBECTL_VERSION="v1.20.5"
      curl -L -o /usr/bin/kubectl "https://storage.googleapis.com/kubernetes-release/release/${KUBECTL_VERSION}/bin/linux/amd64/kubectl"
  become: True

# prepare for AUR package https://wiki.archlinux.org/index.php/Arch_User_Repository
- name: install base-devel
  pacman:
    name: base-devel 
    state: present

# setup kubelet and kubeadm

